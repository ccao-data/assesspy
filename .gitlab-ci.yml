# TEMPLATE GITLAB-CI FOR CCAO PYTHON PACKAGES


# This CI script creates the Python environment necessary to build and test a package
# It is broken down into three overall stages:
# 1. BUILD. Builds the actual R package in the same way one would in RStudio
# 2. TEST. Runs unit tests and checks on the package code
# 3. PAGES. Builds documentation into GitLab Pages using pkgdown


# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.9-slim

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate

test:
  script:
    - python setup.py test
    - pip install tox flake8  # you can also use tox
    - tox -e py39

run:
  script:
    - python setup.py bdist_wheel
    # an alternative approach is to install and run:
    - pip install dist/*
    # run the command here
  artifacts:
    paths:
      - dist/*.whl

pages:
  script:
    - pip3 install ipykernel
    - sudo apt-get install pandoc
    - pip install sphinx
    - pip install furo
    - pip install nbsphinx
    - pip install recommonmark
    - sphinx-build -d _build/doctrees docs/source _build/html
    - mv _build/html public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
